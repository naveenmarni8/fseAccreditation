package com.shopping.orders.controller;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.List;
import java.util.stream.Stream;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.shopping.orders.client.ProductClient;
import com.shopping.orders.dto.ProductDto;
import com.shopping.orders.dto.ProductDtoList;
import com.shopping.orders.service.OrdersService;

@WebMvcTest
class OrdersControllerTest {
	@Autowired
	private MockMvc mockMvc;
	
	@MockBean
	private OrdersService ordersService;
	
	@MockBean
	private ProductClient productClient;
	
	@Autowired
	private ObjectMapper objectMapper;
	
	private ProductDto productDto,productDto2;
	
	private ProductDtoList productDtoList;
	
	@BeforeEach
	void init()
	{
		
		productDto=ProductDto.builder()
				.id("123")
				.productName("Realme GT Master Edition")
				.qty(10)
				.build();
		
		productDto2=ProductDto.builder()
				.id("356")
				.productName("Poco X2")
				.qty(10)
				.build();
		
		productDtoList.setProductDtoList(Stream.of(productDto,productDto2).toList());
			
		          
	}
	
	@Test
	@WithMockUser(authorities = {"USER"})
	void test_createOrder() throws JsonProcessingException, Exception
	{
		when(productClient.checkProduct(any(String.class), any(Integer.class))).thenReturn(true);
		//when(ordersService.sendOrderData((ProductDtoList) productDtoList)).
		ResultActions response=mockMvc.perform(post("/api/v1.0/shopping/order")
				.contentType(MediaType.APPLICATION_JSON)
				.content(objectMapper.writeValueAsString(productDtoList))
				.with(csrf()));
		
		response.andDo(print())
		        .andExpect(status().isOk());
				                      
	}
}
