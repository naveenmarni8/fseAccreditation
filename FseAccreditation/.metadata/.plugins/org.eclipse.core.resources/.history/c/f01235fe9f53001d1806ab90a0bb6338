package com.shopping.app.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.stream.Stream;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.shopping.app.model.Product;
import com.shopping.app.repository.ProductRepository;

@ExtendWith(MockitoExtension.class)
public class ProductServiceTests {
	
	@Mock
	private ProductRepository productRepository;
	
	@InjectMocks
	private ProductService productService;
	
private Product product,product2;
	
	@BeforeEach
	void init()
	{
	product=Product.builder()
			.id("123")
			.productName("Realme GT Master Edition")
			.productDescription("realme GT Master Edition in India is equipped with Snapdragon 778G 5G Processor | 120Hz Super AMOLED Display")
			.productStatus("Available")
			.qty(10)
			.price(26999)
			.features(Stream.of("8 GB RAM | 128 GB ROM","Qualcomm Snapdragon 778G Processor").toList())
			.build();
	
	product2=Product.builder()
			.id("124")
			.productName("xiaomi")
			.productDescription("Poco X2 in India is equipped with Snapdragon 778G 5G Processor | 120Hz Super AMOLED Display")
			.productStatus("Available")
			.qty(10)
			.price(16999)
			.features(Stream.of("8 GB RAM | 128 GB ROM","Qualcomm Snapdragon 778G Processor").toList())
			.build();
			
			
	}
	
	@Test
	void test_addProductService_WithValidProductObject()
	{
		when(productRepository.save(product2)).thenReturn(product2);
		assertEquals(product2,productService.addProductService(product2));
	}

}
